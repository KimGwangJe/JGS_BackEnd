spring.application.name=JustGetStartedBackEnd

spring.datasource.url=${url}
spring.datasource.username=${username}
spring.datasource.password=${password}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=none

# jpa query logging
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
logging.level.org.hibernate.type.descriptor.sql=info
spring.jpa.properties.hibernate.default_batch_fetch_size=1000

# Logging
logging.level.root=info

# Google
spring.security.oauth2.client.registration.google.client-id=${google_client_id}
spring.security.oauth2.client.registration.google.client-secret=${google_client_pw}
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code

# Kakao
spring.security.oauth2.client.registration.kakao.client-id=${kakao_client_id}
spring.security.oauth2.client.registration.kakao.client-secret=${kakao_client_pw}
spring.security.oauth2.client.registration.kakao.scope=account_email,profile_nickname,profile_image
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=http://localhost:8080/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-name=Kakao
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post

spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me
spring.security.oauth2.client.provider.kakao.user-name-attribute=id

# Naver
spring.security.oauth2.client.registration.naver.client-id=${naver_client_id}
spring.security.oauth2.client.registration.naver.client-secret=${naver_client_pw}
spring.security.oauth2.client.registration.naver.scope=name,email,picture
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:8080/login/oauth2/code/naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

#S3
spring.profiles.include=private

spring.web.resources.add-mappings=false
spring.mvc.throw-exception-if-no-handler-found=true

spring.data.redis.repositories.enabled=false
